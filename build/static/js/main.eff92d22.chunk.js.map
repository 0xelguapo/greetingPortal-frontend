{"version":3,"sources":["hooks/useGreet.js","hooks/useEthereum.js","hooks/useWallet.js","components/NavBar.js","App.js","index.js"],"names":["useGreet","getEthereum","contractABI","abi","ethereum","a","provider","ethers","providers","Web3Provider","signer","getSigner","gContract","Contract","useEthereum","useState","name","message","greetingInfo","setGreetingInfo","getAllGreetings","window","greetContract","greetings","greetingsCleaned","forEach","greeting","push","address","greeter","timestamp","Date","console","log","greet","greetTxn","hash","wait","getTotalGreetings","count","toNumber","handleChange","e","target","value","useWallet","currentAccount","setCurrentAccount","newGreetingState","setNewGreetingState","checkWallet","request","method","accounts","length","account","allGreetings","connectWallet","alert","useEffect","NavBar","className","role","aria-label","onClick","App","placeholder","onChange","disabled","map","index","key","toLocaleTimeString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eff92d22.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport useEthereum from \"./useEthereum\";\n\nexport default function useGreet() {\n  const { getEthereum } = useEthereum();\n\n  const [greetingInfo, setGreetingInfo] = useState({\n    name: \"\",\n    message: \"\",\n  });\n\n  const handleChange = (e) => {\n    setGreetingInfo({\n      ...greetingInfo,\n      [e.target.name]: e.target.value,\n    });\n    console.log(greetingInfo);\n  };\n\n  const getAllGreetings = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const greetContract = await getEthereum(ethereum);\n        const greetings = await greetContract.getAllGreetings();\n\n        let greetingsCleaned = [];\n        greetings.forEach((greeting) => {\n          greetingsCleaned.push({\n            address: greeting.greeter,\n            name: greeting.name,\n            message: greeting.message,\n            timestamp: new Date(greeting.timestamp * 1000),\n          });\n        });\n        return greetingsCleaned;\n      }\n    } catch (err) {\n      console.log(\"eth object doesn't exist!\");\n    }\n  };\n\n  const greet = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const greetContract = await getEthereum(ethereum);\n        // the actual greeting from smart contract below\n        const greetTxn = await greetContract.greet(\n          greetingInfo.name,\n          greetingInfo.message\n        );\n        console.log(\"Mining...\", greetTxn.hash);\n\n        await greetTxn.wait();\n        console.log(\"Mined --\", greetTxn.hash);\n\n        let count = await greetContract.getTotalGreetings();\n        console.log(\"New total wave count...\", count.toNumber());\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return { getAllGreetings, greet, handleChange };\n}\n","import { useState } from \"react\";\nimport abi from \"../utils/GreetingPortal.json\";\nimport { ethers } from \"ethers\";\n\nexport default function useEthereum() {\n  const contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n  const contractABI = abi.abi;\n\n  const getEthereum = async (ethereum) => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const gContract = new ethers.Contract(contractAddress, contractABI, signer);\n    return gContract;\n  };\n\n  return { getEthereum };\n}\n","import{ useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport useGreet from './useGreet';\n\nexport default function useWallet() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [newGreetingState, setNewGreetingState] = useState();\n  const { getAllGreetings } = useGreet();\n\n  const checkWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"Make sure you have metamask!\");\n        return;\n      } else {\n        console.log(\"we have the ethereum object\", ethereum);\n      }\n      //check to see if user has provided access\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"Found an authorized account:\", account);\n        await setCurrentAccount(account);\n        const allGreetings = await getAllGreetings();\n        setNewGreetingState(allGreetings)\n        console.log(\"allGreetings\", allGreetings);\n      } else {\n        console.log(\"No authorized account found\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get metamask!\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      console.log(\"connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    checkWallet();\n  }, []);\n\n  return { newGreetingState ,currentAccount, connectWallet };\n}\n","import React from \"react\";\nimport useWallet from \"../hooks/useWallet.js\";\nimport \"../App.css\";\n\nexport default function NavBar() {\n  const { currentAccount, connectWallet } = useWallet();\n\n  return (\n    <div className=\"navContainer\">\n      {currentAccount ? (\n        <>\n          <div className=\"walletAddress\">Wallet Connected <span role=\"img\" aria-label=\"check\">âœ…</span></div>\n        </>\n      ) : (\n        <button className=\"connectButton\" onClick={connectWallet}>\n          Connect Wallet\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport useWallet from \"./hooks/useWallet.js\";\nimport useGreet from \"./hooks/useGreet.js\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\n\nexport default function App() {\n  const { newGreetingState, currentAccount, connectWallet } = useWallet();\n  const { greet, handleChange } = useGreet();\n\n  console.log(\"app.js\", newGreetingState);\n  return (\n    <>\n      <NavBar />\n      <div className=\"mainContainer\">\n        <div className=\"dataContainer\">\n          <div className=\"header\">ðŸ‘‹ Hey there!</div>\n\n          <div className=\"bio\">\n            <p>My name is elguapo and I'm a builder.</p>\n            <p>Connect your wallet to send me a message on Rinkeby Test Network!</p>\n          </div>\n\n          <div className=\"greetingForm\">\n            <input placeholder=\"Your name / alias\" name=\"name\" onChange={handleChange} />\n            <textarea className=\"message\" name=\"message\" placeholder=\"Send a message...\" onChange={handleChange} />\n          </div>\n          <button className=\"waveButton\" onClick={greet} disabled={!currentAccount}>\n            Send a Greeting!\n          </button>\n          {!currentAccount && (\n            <p className=\"helper\">\n              Connect to Rinkeby Test Network to Interact!\n            </p>\n          )}\n          <div className=\"greetingContainer\">\n            {newGreetingState &&\n              newGreetingState.map((greeting, index) => (\n                <div key={index} className=\"greeting\">\n                  <div className=\"greetingName\">{greeting.name}</div>\n                  <div className=\"greetingMessage\">{greeting.message}</div>\n                  <div className=\"greetingBottom\">\n                    <div className=\"greetingAddress\">{greeting.address}</div>\n                    <div className=\"greetingTime\">\n                      {greeting.timestamp.toLocaleTimeString()}\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}