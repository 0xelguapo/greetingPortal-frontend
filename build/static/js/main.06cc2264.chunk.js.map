{"version":3,"sources":["hooks/useGreet.js","hooks/useEthereum.js","hooks/useWallet.js","components/NavBar.js","App.js","index.js"],"names":["useGreet","getEthereum","contractABI","abi","ethereum","a","provider","ethers","providers","Web3Provider","signer","getSigner","gContract","Contract","useEthereum","useState","name","message","greetingInfo","setGreetingInfo","allGreetings","setAllGreetings","getAllGreetings","window","greetingsCleaned","greetContract","greetings","forEach","greeting","push","address","greeter","timestamp","Date","reverse","console","log","greet","greetTxn","hash","wait","getTotalGreetings","count","location","reload","toNumber","handleChange","e","target","value","useWallet","currentAccount","setCurrentAccount","newGreetingState","setNewGreetingState","checkWallet","request","method","accounts","length","account","connectWallet","alert","useEffect","NavBar","className","href","rel","role","aria-label","onClick","App","style","fontWeight","placeholder","onChange","disabled","map","index","key","toLocaleTimeString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06cc2264.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport useEthereum from \"./useEthereum\";\n\nexport default function useGreet() {\n  const { getEthereum } = useEthereum();\n  const [greetingInfo, setGreetingInfo] = useState({\n    name: \"\",\n    message: \"\",\n  });\n  const [allGreetings, setAllGreetings] = useState([]);\n\n  const handleChange = (e) => {\n    setGreetingInfo({\n      ...greetingInfo,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const getAllGreetings = async () => {\n    try {\n      const { ethereum } = window;\n      let greetingsCleaned = [];\n      if (ethereum) {\n        const greetContract = await getEthereum(ethereum);\n        const greetings = await greetContract.getAllGreetings();\n\n        greetingsCleaned = [];\n        greetings.forEach((greeting) => {\n          greetingsCleaned.push({\n            address: greeting.greeter,\n            name: greeting.name,\n            message: greeting.message,\n            timestamp: new Date(greeting.timestamp * 1000),\n          });\n        });\n        return greetingsCleaned.reverse();\n      }\n      setAllGreetings(greetingsCleaned);\n      console.log(\"greetingsCleaned\", greetingsCleaned);\n    } catch (err) {\n      console.log(\"eth object doesn't exist!\");\n    }\n  };\n\n  const greet = async () => {\n    try {\n      const { ethereum } = window;\n      if (ethereum) {\n        const greetContract = await getEthereum(ethereum);\n        // the actual greeting from smart contract below\n        const greetTxn = await greetContract.greet(\n          greetingInfo.name,\n          greetingInfo.message\n        );\n        console.log(\"Mining...\", greetTxn.hash);\n\n        await greetTxn.wait();\n        console.log(\"Mined --\", greetTxn.hash);\n\n        let count = await greetContract.getTotalGreetings();\n        \n        await window.location.reload();\n        console.log(\"New total wave count...\", count.toNumber());\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return { allGreetings, getAllGreetings, greet, handleChange };\n}\n","import { useState } from \"react\";\nimport abi from \"../utils/GreetingPortal.json\";\nimport { ethers } from \"ethers\";\n\nexport default function useEthereum() {\n  const contractAddress = \"0x27030F3d828750AE2eDC57E4A1c26E3909c4F904\";\n  const contractABI = abi.abi;\n\n  const getEthereum = async (ethereum) => {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const gContract = new ethers.Contract(contractAddress, contractABI, signer);\n    return gContract;\n  };\n\n  return { getEthereum };\n}\n","import{ useState, useEffect } from \"react\";\nimport useGreet from './useGreet';\n\nexport default function useWallet() {\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const [newGreetingState, setNewGreetingState] = useState();\n  const { getAllGreetings } = useGreet();\n\n  const checkWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        console.log(\"Make sure you have metamask!\");\n        return;\n      } else {\n        console.log(\"we have the ethereum object\", ethereum);\n      }\n      //check to see if user has provided access\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        console.log(\"Found an authorized account:\", account);\n        await setCurrentAccount(account);\n        const allGreetings = await getAllGreetings();\n        setNewGreetingState(allGreetings);\n        console.log(\"allGreetings\", allGreetings);\n      } else {\n        console.log(\"No authorized account found\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get metamask!\");\n        return;\n      }\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      console.log(\"connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    checkWallet();\n  }, []);\n\n  return { newGreetingState ,currentAccount, connectWallet };\n}\n","import React from \"react\";\nimport useWallet from \"../hooks/useWallet.js\";\nimport \"../App.css\";\n\nexport default function NavBar() {\n  const { currentAccount, connectWallet } = useWallet();\n\n  return (\n    <div className=\"navContainer\">\n      <div className=\"requestEth\">\n        <a href=\"https://faucets.chain.link/rinkeby\" target=\"_blank\" rel=\"noopener noreferrer\">Need Rinkeby Eth?</a>\n      </div>\n      {currentAccount ? (\n        <>\n          <div className=\"walletAddress\">Wallet Connected <span role=\"img\" aria-label=\"check\">âœ…</span></div>\n        </>\n      ) : (\n        <button className=\"connectButton\" onClick={connectWallet}>\n          Connect Wallet\n        </button>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport useWallet from \"./hooks/useWallet.js\";\nimport useGreet from \"./hooks/useGreet.js\";\nimport NavBar from \"./components/NavBar\";\nimport \"./App.css\";\n\nexport default function App() {\n  const { newGreetingState, currentAccount, connectWallet } = useWallet();\n  const { allGreetings, greet, handleChange } = useGreet();\n\n  return (\n    <>\n      <NavBar />\n      <div className=\"mainContainer\">\n        <div className=\"dataContainer\">\n          <div className=\"header\">ðŸ‘‹ Hey there!</div>\n\n          <div className=\"bio\">\n            <p>My name is elguapo and I'm a builder.</p>\n            <p>Connect your wallet to send me a message on <span style={{fontWeight: \"bold\"}}>Rinkeby Test Network!</span></p>\n          </div>\n\n          <div className=\"greetingForm\">\n            <input placeholder=\"Your name / alias\" name=\"name\" onChange={handleChange} />\n            <textarea className=\"message\" name=\"message\" placeholder=\"Send a message...\" onChange={handleChange} />\n          </div>\n          <button className=\"waveButton\" onClick={greet} disabled={!currentAccount}>\n            Send a Greeting!\n          </button>\n          {!currentAccount && (\n            <p className=\"helper\">\n              Connect to Rinkeby Test Network to Interact!\n            </p>\n          )}\n          <div className=\"greetingContainer\">\n            <h3 className=\"greetingsTitle\">----- Greetings from Everyone -----</h3>\n            {newGreetingState &&\n              newGreetingState.map((greeting, index) => (\n                <div key={index} className=\"greeting\">\n                  <div className=\"greetingName\">{greeting.name}</div>\n                  <div className=\"greetingMessage\">{greeting.message}</div>\n                  <div className=\"greetingBottom\">\n                    <div className=\"greetingAddress\">{greeting.address}</div>\n                    <div className=\"greetingTime\">\n                      {greeting.timestamp.toLocaleTimeString()}\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}